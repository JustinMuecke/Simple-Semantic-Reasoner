        OWLNamedIndividual justin = factory.getOWLNamedIndividual(IOR + "#Justin");
        OWLClassExpression parent = factory.getOWLClass(IOR + "#Parent");
        logger.info(String.valueOf(reasoner.isEntailed(factory.getOWLClassAssertionAxiom(parent, justin))));


        OWLNamedIndividual rolt = factory.getOWLNamedIndividual(IOR + "#Rolt");
        OWLObjectProperty hasAncestor = factory.getOWLObjectProperty(IOR + "#hasAncestor");
        OWLNamedIndividual annika = factory.getOWLNamedIndividual(IOR + "#Annika");
        System.out.println(reasoner.isEntailed(factory.getOWLObjectPropertyAssertionAxiom(hasAncestor, annika, rolt)));

        OWLObjectProperty property = factory.getOWLObjectProperty(IOR + "#hasGrandChild");
        OWLClassExpression hasGrandChildExpression = factory.getOWLObjectSomeValuesFrom(property, factory.getOWLClass(IOR + "Child"));
        OWLClassExpression expression = factory.getOWLObjectAllValuesFrom(
                factory.getOWLObjectProperty(IOR+"#hasChild"),
                    factory.getOWLObjectSomeValuesFrom(
                        factory.getOWLObjectProperty(IOR + "#hasChild"),
                            factory.getOWLClass(IOR + "#Child"))
        );

        logger.info(String.valueOf(reasoner.isEntailed(factory.getOWLClassAssertionAxiom(expression, rolt))));


        OWLClassExpression hasValueExpression = factory.getOWLObjectHasValue(factory.getOWLObjectProperty(IOR + "#hasChild"), annika);
        logger.info(reasoner.getInstances(hasValueExpression).toString());
        System.out.println(reasoner.isEntailed(factory.getOWLEquivalentClassesAxiom(hasGrandChildExpression, expression)));
        OWLObjectPropertyAssertionAxiom assertionAxiom = factory.getOWLObjectPropertyAssertionAxiom(
                factory.getOWLObjectProperty(property), rolt, factory.getOWLNamedIndividual(IOR + "#Annika")
        );
        OWLObjectComplementOf childless = factory.getOWLObjectComplementOf(
                    factory.getOWLObjectSomeValuesFrom(factory.getOWLObjectProperty(IOR + "#hasChild"), factory.getOWLClass(IOR + "#Child"))
        );
        System.out.println(reasoner.getInstances(childless));
    }

}
OWLIndividual anon = factory.getOWLAnonymousIndividual();
Set<OWLDeclarationAxiom> owlDeclarationAxioms = ontology.getAxioms(AxiomType.DECLARATION);
    for(OWLDeclarationAxiom declaration : owlDeclarationAxioms){
       System.out.println(declaration.getClassesInSignature());
    }
